‚óè üìö PROMPT COMPLETO PARA CLASSIFICA√á√ÉO E INSER√á√ÉO DE TRANSA√á√ïES

  üéØ CONTEXTO DO SISTEMA

  Estou trabalhando em um sistema financeiro Next.js + Supabase (PostgreSQL) onde preciso:
  1. Atualizar transa√ß√µes existentes com categorias/centros de custo
  2. Inserir novas transa√ß√µes a partir de dados em formato planilha

  Workspace ativo: woodpromais@gmail.com (ID: b4f7239a-8641-4802-b70c-e412cf033381)

  ---
  üìä ESTRUTURA DE DADOS

  Tabelas principais:

  - fp_transacoes - Transa√ß√µes financeiras
  - fp_categorias - Categorias (Receita/Despesa)
  - fp_subcategorias - Subcategorias vinculadas √†s categorias
  - fp_centros_custo - Centros de custo (projetos/clientes)
  - fp_contas - Contas banc√°rias
  - fp_formas_pagamento - Formas de pagamento

  Campos da transa√ß√£o:

  fp_transacoes:
    - data (date)
    - descricao (text)
    - valor (numeric)
    - tipo (text: 'receita' | 'despesa' | 'transferencia')
    - status (text: 'realizado' | 'previsto')
    - categoria_id (uuid FK)
    - subcategoria_id (uuid FK, nullable)
    - centro_custo_id (uuid FK, nullable)
    - conta_id (uuid FK)
    - forma_pagamento_id (uuid FK, nullable)
    - workspace_id (uuid FK)

  ---
  üóÇÔ∏è CADASTROS EXISTENTES NO SISTEMA

  CENTROS DE CUSTO:

  - WoodPro+
  - Suelen e Osmar
  - Dayana S Tokinari
  - Cooperativa | Sala H√©lio e Dr. Ivan e Corredor
  - Renata Santos Leite Neris
  - Maur√≠cio Manoel Ribeiro dos Santos
  - Jailson Danilo da Silva
  - Andr√©ia Pelegrini Mendes
  - Darlon Marques - Andr√©ia
  - H√©lio Trist√£o
  - Mau√° Plaza Shopping
  - Cooperativa | Complementos

  CATEGORIAS E SUBCATEGORIAS:

  RECEITAS:
  - Aplica√ß√£o ‚Üí Rentabilidade CDI
  - Recebimento Venda ‚Üí (sem subcategorias)

  DESPESAS:
  - Alimenta√ß√£o ‚Üí (sem subcategorias)
  - Aplicativos ‚Üí Conta Simples
  - Componentes ‚Üí VT Ferragens
  - Fabrica√ß√£o ‚Üí Corte Sob Medida
  - Ferramentas ‚Üí (sem subcategorias)
  - Impostos e tributos ‚Üí (sem subcategorias)
  - Indicadores ‚Üí (sem subcategorias)
  - Lalamove ‚Üí (sem subcategorias)
  - MDF / FITA / Tapa Furo ‚Üí Lano
  - Medi√ß√£o ‚Üí (sem subcategorias)
  - Montagem ‚Üí Evaldo Carlos
  - N√£o Lembro ‚Üí (sem subcategorias)
  - Papelaria ‚Üí (sem subcategorias)
  - Projeto Executivo ‚Üí (sem subcategorias)
  - Promob ‚Üí Licen√ßa Promob (tipo: ambos)
  - Receita Federal ‚Üí (sem subcategorias)
  - Refei√ß√£o ‚Üí (sem subcategorias)
  - Reserva Tecnica ‚Üí (sem subcategorias)
  - Retirada ‚Üí Alexandre, Ricardo
  - Serralheria ‚Üí (sem subcategorias)
  - Transporte ‚Üí Uber, Lalamov
  - Vidra√ßaria ‚Üí (sem subcategorias)

  CONTAS DISPON√çVEIS:

  - Wood Pro + (tipo: conta_corrente)
  - Wood Pro + (tipo: dinheiro) ‚Üê Padr√£o para inser√ß√µes

  ---
  üéØ REGRAS DE CLASSIFICA√á√ÉO APRENDIDAS

  PADR√ÉO 1: Atualizar transa√ß√µes existentes por DESCRI√á√ÉO

  Formato da solicita√ß√£o:
  "Todos que contenham na descri√ß√£o: [TEXTO]
   Categoria: [NOME]
   Centro de Custo: [NOME]
   Subcategoria: [NOME] (opcional)"

  Processo:
  1. Buscar IDs via ILIKE '%TEXTO%' (busca aproximada)
  2. Executar UPDATE na tabela fp_transacoes
  3. Validar quantidade de registros atualizados

  Exemplo:
  UPDATE fp_transacoes
  SET
    categoria_id = 'UUID',
    subcategoria_id = 'UUID',
    centro_custo_id = 'UUID',
    updated_at = NOW()
  WHERE workspace_id = 'b4f7239a-8641-4802-b70c-e412cf033381'
    AND descricao ILIKE '%UBER DO BRASIL%';

  ---
  PADR√ÉO 2: Inserir novas transa√ß√µes via PLANILHA

  Formato de entrada (9 colunas):
  Col1: Data (DD/MM/YYYY)
  Col2: Centro de Custo
  Col3: Tipo (SAIDA=despesa | ENTRADA=receita)
  Col4: Descri√ß√£o
  Col5: Valor (formato: 5.655,00)
  Col6: Subcategoria (pode ser fornecedor/pessoa)
  Col7: Categoria
  Col8: Status (Realizado | Previsto)
  Col9: Conta (geralmente "Dinheiro")

  Exemplo de linha:
  12/12/2024 | SUELEN E OSMAR | SAIDA | OBRA | 5.655,00 | VT FERRAGENS | COMPONETES | Realizado | Dinheiro

  Processo de mapeamento:

  1. Centro de Custo: Busca aproximada via ILIKE
  -- "SUELEN E OSMAR" encontra "Suelen e Osmar"
  WHERE nome ILIKE '%SUELEN%OSMAR%'
  2. Categoria: Busca aproximada
  -- "COMPONETES" encontra "Componentes"
  WHERE nome ILIKE '%COMPONENT%'
  3. Subcategoria: Busca aproximada + vincula√ß√£o com categoria
  -- Se n√£o existir subcategoria espec√≠fica, usar subcategoria gen√©rica da categoria
  -- Exemplo: "CSM" n√£o existe ‚Üí usar "Corte Sob Medida" da categoria "Fabrica√ß√£o"
  4. Fornecedor na descri√ß√£o: Se subcategoria n√£o existir, adicionar √† descri√ß√£o
  -- Entrada: Col4="OBRA", Col6="CSM"
  -- Resultado: descricao = "OBRA - CSM"
  5. Tipo: Convers√£o
    - SAIDA ‚Üí 'despesa'
    - ENTRADA ‚Üí 'receita'
  6. Status: Convers√£o
    - Realizado ‚Üí 'realizado'
    - Previsto ‚Üí 'previsto'
  7. Valor: Converter 5.655,00 ‚Üí 5655.00 (numeric)
  8. Conta: Usar conta padr√£o "Wood Pro + (dinheiro)"
    - ID: 5a811902-37bd-433d-a563-856a2b09ef1b

  ---
  üîç ESTRAT√âGIA DE BUSCA APROXIMADA

  Regras de matching:
  1. Sempre usar ILIKE (case-insensitive)
  2. Remover acentos mentalmente: "ANDREIA" = "Andr√©ia"
  3. Buscar palavras-chave: "WOOD PRO MAIS" ‚Üí %WOOD%PRO%
  4. Para nomes compostos: buscar ambas as partes
  5. NUNCA criar novos cadastros - sempre usar o mais pr√≥ximo existente

  Exemplos de mapeamento:
  "COOPERATIVA | DR. HELIO - DR. IVAM"
  ‚Üí "Cooperativa | Sala H√©lio e Dr. Ivan e Corredor"

  "COMPONETES" (erro de digita√ß√£o)
  ‚Üí "Componentes"

  "RETIRADA (Alexandre)"
  ‚Üí Categoria: "Retirada" + Subcategoria: "Alexandre"

  ---
  üìù TEMPLATE SQL PARA INSER√á√ÉO

  INSERT INTO fp_transacoes (
    workspace_id, data, descricao, valor, tipo, status,
    categoria_id, subcategoria_id, centro_custo_id, conta_id,
    created_at, updated_at
  ) VALUES
  ('b4f7239a-8641-4802-b70c-e412cf033381',
   '2024-12-12',
   'OBRA - VT FERRAGENS',
   5655.00,
   'despesa',
   'realizado',
   '71228b18-fac7-4b1b-92e7-b94642a35121', -- Componentes
   '9ecb9df7-8257-493e-b4df-6322ec5db5b7', -- VT Ferragens
   '70d8435a-2f83-4f89-b8ea-5c81d5a0a302', -- Suelen e Osmar
   '5a811902-37bd-433d-a563-856a2b09ef1b', -- Wood Pro + (dinheiro)
   NOW(),
   NOW()
  );

  ---
  ‚úÖ WORKFLOW COMPLETO

  Para ATUALIZA√á√ÉO:

  1. Receber: "Descri√ß√£o cont√©m X ‚Üí Categoria Y, Centro Z"
  2. Buscar IDs via MCP Supabase
  3. Executar UPDATE
  4. Validar com SELECT COUNT

  Para INSER√á√ÉO:

  1. Receber linhas de planilha (9 colunas)
  2. Buscar todos IDs necess√°rios (centros, categorias, subcategorias)
  3. Criar preview mostrando mapeamento
  4. Aguardar confirma√ß√£o
  5. Executar INSERT em lote
  6. Validar com SELECT

  ---
  üöÄ EXEMPLO DE VALIDA√á√ÉO P√ìS-INSER√á√ÉO

  SELECT
    t.data,
    t.descricao,
    t.valor,
    t.tipo,
    t.status,
    c.nome as categoria,
    s.nome as subcategoria,
    cc.nome as centro_custo,
    co.nome as conta
  FROM fp_transacoes t
  LEFT JOIN fp_categorias c ON t.categoria_id = c.id
  LEFT JOIN fp_subcategorias s ON t.subcategoria_id = s.id
  LEFT JOIN fp_centros_custo cc ON t.centro_custo_id = cc.id
  LEFT JOIN fp_contas co ON t.conta_id = co.id
  WHERE t.workspace_id = 'b4f7239a-8641-4802-b70c-e412cf033381'
    AND t.created_at >= NOW() - INTERVAL '1 hour'
  ORDER BY t.created_at DESC;

  ---
  üéØ PROMPT PARA INICIAR NOVO CHAT

  Ol√°! Preciso de ajuda com classifica√ß√£o e inser√ß√£o de transa√ß√µes financeiras via MCP Supabase.

  CONTEXTO:
  - Sistema: Next.js + Supabase (PostgreSQL)
  - Workspace: woodpromais@gmail.com (ID: b4f7239a-8641-4802-b70c-e412cf033381)
  - Tenho acesso ao MCP Supabase para queries SQL

  TAREFA:
  Vou te passar transa√ß√µes em formato de planilha (9 colunas) para inserir no banco de dados.

  REGRAS IMPORTANTES:
  1. NUNCA criar novos cadastros - sempre usar registros existentes mais pr√≥ximos
  2. Usar busca aproximada (ILIKE) para encontrar categorias/centros de custo
  3. Se subcategoria n√£o existir, usar subcategoria gen√©rica da categoria
  4. Adicionar fornecedor/pessoa na descri√ß√£o se n√£o houver subcategoria espec√≠fica
  5. Conta padr√£o: "Wood Pro + (dinheiro)" - ID: 5a811902-37bd-433d-a563-856a2b09ef1b
  6. Sempre criar PREVIEW antes de inserir

  FORMATO DAS LINHAS:
  Data | Centro Custo | Tipo | Descri√ß√£o | Valor | Subcategoria | Categoria | Status | Conta

  Voc√™ consegue me ajudar? Por favor, primeiro busque todos os cadastros existentes (centros de custo, categorias e subcategorias) do
  workspace para conhecer as op√ß√µes dispon√≠veis.

  ---
  Esse prompt garante que o novo chat:
  ‚úÖ Entenda o contexto completo do sistema
  ‚úÖ Conhe√ßa todas as regras de mapeamento aprendidas
  ‚úÖ Saiba buscar cadastros existentes primeiro
  ‚úÖ Crie previews antes de executar
  ‚úÖ Use a estrat√©gia de busca aproximada correta