# PRD - Sistema de Controle Financeiro Pessoal

## üìã Informa√ß√µes do Produto

**Nome:** Sistema de Controle Financeiro Pessoal  
**Vers√£o:** 1.0 (MVP)  
**Data:** Agosto 2025  
**Autor:** Sistema Interno  
**Tipo:** Aplica√ß√£o Web Pessoal  

---

## üéØ Vis√£o Geral

### Objetivo Principal
Desenvolver uma aplica√ß√£o web para controle financeiro pessoal que permita registro, categoriza√ß√£o e an√°lise de transa√ß√µes financeiras com foco em simplicidade e efici√™ncia.

### Problema a Resolver
- Falta de controle detalhado sobre gastos pessoais
- Dificuldade em categorizar e analisar padr√µes de consumo
- Necessidade de acompanhar metas financeiras
- Controle de transfer√™ncias entre contas
- Gest√£o de transa√ß√µes parceladas e recorrentes

### P√∫blico-Alvo
- **Prim√°rio:** Usu√°rio individual (uso pessoal)
- **Secund√°rio:** Potencial expans√£o para uso empresarial

---

## üèóÔ∏è Arquitetura T√©cnica

### Stack Tecnol√≥gica
- **Frontend:** Next.js + TypeScript + Tailwind CSS
- **Backend:** Supabase (PostgreSQL + Auth + Storage)
- **Deploy:** Vercel (frontend)
- **Bibliotecas:** shadcn/ui, Context API, Recharts, date-fns

### Estrutura de Dados
- **Prefixo:** `fp_` (finan√ßas pessoais)
- **7 Tabelas principais:** categorias, subcategorias, contas, formas_pagamento, centros_custo, transacoes, metas
- **Relacionamentos:** Normalizados com chaves estrangeiras
- **Performance:** √çndices estrat√©gicos + triggers autom√°ticos

---

## üöÄ Funcionalidades Principais

### 1. Gest√£o de Transa√ß√µes

#### 1.1 Tipos de Transa√ß√£o
- **Receita:** Entradas financeiras (sal√°rio, freelance, vendas)
- **Despesa:** Sa√≠das financeiras (alimenta√ß√£o, transporte, moradia)
- **Transfer√™ncia:** Movimenta√ß√£o entre contas pr√≥prias
- **Parcelada:** Despesas divididas em v√°rias parcelas

#### 1.2 Campos da Transa√ß√£o
| Campo | Tipo | Obrigat√≥rio | Descri√ß√£o |
|-------|------|-------------|-----------|
| Data | Date | ‚úÖ | Data da transa√ß√£o |
| Descri√ß√£o | Text | ‚úÖ | Descri√ß√£o detalhada |
| Valor | Decimal | ‚úÖ | Valor em R$ (DECIMAL 10,2) |
| Tipo | Enum | ‚úÖ | receita, despesa, transferencia |
| Conta | UUID | ‚úÖ | Conta de origem |
| Categoria | UUID | ‚ùå | Categoria principal |
| Subcategoria | UUID | ‚ùå | Subcategoria detalhada |
| Forma Pagamento | UUID | ‚ùå | Como foi pago |
| Centro Custo | UUID | ‚ùå | Projeto/√°rea respons√°vel |
| Status | Enum | ‚úÖ | pendente, pago, cancelado |
| Anexo | URL | ‚ùå | Comprovante/nota fiscal |
| Observa√ß√µes | Text | ‚ùå | Coment√°rios adicionais |

#### 1.3 Regras de Neg√≥cio - Transa√ß√µes
- Valor sempre positivo (R$ 0,01 a R$ 99.999.999,99) - DECIMAL(10,2)
- Data pode ser futura (transa√ß√µes agendadas)
- Transfer√™ncias n√£o afetam patrim√¥nio total
- Parcelas s√£o agrupadas por `grupo_parcelamento` (BIGINT)
- Status padr√£o: "pendente"
- Recorr√™ncias geram automaticamente pr√≥ximas transa√ß√µes

### 2. Sistema de Parcelamento

#### 2.1 Funcionalidades
- **Parcelas:** Dividir despesa em N parcelas iguais
- **Agrupamento:** Vincular todas as parcelas pelo `grupo_parcelamento`
- **Controle:** `parcela_atual` de `total_parcelas`
- **Gera√ß√£o:** Criar todas as parcelas automaticamente

#### 2.2 Exemplo de Uso
```
Compra: Geladeira R$ 1.200,00 em 12x
- Parcela 1/12: R$ 100,00 - Data: 15/08/2025
- Parcela 2/12: R$ 100,00 - Data: 15/09/2025
- ... at√© ...
- Parcela 12/12: R$ 100,00 - Data: 15/07/2026
```

### 3. Sistema de Recorr√™ncia

#### 3.1 Frequ√™ncias Suportadas
- **Di√°rio:** Todo dia
- **Semanal:** Uma vez por semana
- **Mensal:** Uma vez por m√™s (mesmo dia)
- **Anual:** Uma vez por ano

#### 3.2 Comportamento
- Transa√ß√µes recorrentes nascem com `status='pendente'`
- Usu√°rio marca como `status='pago'` quando efetuar
- Sistema gera automaticamente pr√≥xima ocorr√™ncia
- Campo `proxima_recorrencia` controla quando gerar

#### 3.3 Exemplos
- **Sal√°rio:** R$ 5.000,00 todo dia 5 (mensal)
- **Conta de luz:** R$ 150,00 todo dia 10 (mensal)
- **Academia:** R$ 80,00 todo dia 15 (mensal)

### 4. Sistema de Transfer√™ncias

#### 4.1 Comportamento
- **Tipo:** `transferencia`
- **Contas:** `conta_id` (origem) + `conta_destino_id` (destino)
- **Patrim√¥nio:** N√£o altera total (redistribui√ß√£o)
- **Exemplo:** R$ 500 do Nubank ‚Üí Ita√∫

#### 4.2 Impacto nos Saldos
```
Antes: Nubank R$ 1.000 | Ita√∫ R$ 500 | Total: R$ 1.500
Transfer√™ncia: R$ 300 Nubank ‚Üí Ita√∫
Depois: Nubank R$ 700 | Ita√∫ R$ 800 | Total: R$ 1.500
```

### 5. Sistema de Metas

#### 5.1 Tipos de Meta
- **Por Categoria:** "Gastar m√°ximo R$ 500 em Alimenta√ß√£o este m√™s"
- **Total:** "Gastar m√°ximo R$ 3.000 no m√™s"

#### 5.2 Campos da Meta
| Campo | Tipo | Obrigat√≥rio | Descri√ß√£o |
|-------|------|-------------|-----------|
| Nome | Text | ‚úÖ | Nome descritivo |
| Valor Limite | Decimal | ‚úÖ | Valor m√°ximo |
| Per√≠odo In√≠cio | Date | ‚úÖ | Data in√≠cio |
| Per√≠odo Fim | Date | ‚úÖ | Data fim |
| Categoria | UUID | ‚ùå | Categoria espec√≠fica (null = total) |
| Tipo | Enum | ‚úÖ | categoria, total |

#### 5.3 Alertas e Acompanhamento
- **50% do limite:** Aviso amarelo
- **80% do limite:** Aviso laranja  
- **100% do limite:** Aviso vermelho
- **C√°lculo:** Soma transa√ß√µes do per√≠odo vs limite

---

## üé® Interface do Usu√°rio

### 1. Tela Principal (Dashboard)

#### 1.1 Layout
```
[Header: Logo + Menu + A√ß√µes]
[Resumo: Saldo Total + Receitas + Despesas do M√™s]
[Gr√°ficos: Gastos por Categoria + Evolu√ß√£o Mensal]
[√öltimas Transa√ß√µes: Lista das 10 mais recentes]
[Link: "Ver Relat√≥rios e Metas" ‚Üí P√°gina dedicada]
```

#### 1.2 Cart√µes de Resumo
- **Saldo Total:** Soma de todas as contas
- **Receitas do M√™s:** Total de entradas
- **Despesas do M√™s:** Total de sa√≠das
- **Meta Principal:** Progresso resumido (% usado)

### 2. Nova Transa√ß√£o

#### 2.1 Fluxo de Entrada
```
Bot√£o "Nova Transa√ß√£o" ‚Üí
‚îå‚îÄ Receita (√∫nica/recorrente)
‚îú‚îÄ Despesa (√∫nica/recorrente + parcelar?)
‚îú‚îÄ Parcelada (sempre despesa)
‚îî‚îÄ Entre Contas (transfer√™ncia)
```

#### 2.2 Formul√°rios Espec√≠ficos

**Receita/Despesa:**
- Data, Descri√ß√£o, Valor, Conta
- Categoria, Subcategoria (opcionais)
- Forma Pagamento, Centro Custo (opcionais)
- ‚òëÔ∏è Recorrente? ‚Üí Frequ√™ncia
- Anexo, Observa√ß√µes

**Parcelada:**
- Campos b√°sicos + Total de Parcelas
- Gera automaticamente todas as parcelas

**Transfer√™ncia:**
- Data, Descri√ß√£o, Valor
- Conta Origem ‚Üí Conta Destino
- Observa√ß√µes

### 3. Lista de Transa√ß√µes

#### 3.1 Funcionalidades
- **Visualiza√ß√£o:** Tabela paginada
- **Filtros:** Data, Categoria, Conta, Status, Tipo
- **Ordena√ß√£o:** Data (desc/asc), Valor, Categoria
- **Busca:** Por descri√ß√£o
- **A√ß√µes:** Editar, Excluir, Duplicar

#### 3.2 Colunas da Tabela
| Coluna | Conte√∫do |
|--------|----------|
| Data | DD/MM/AAAA |
| Descri√ß√£o | Texto + √≠cone tipo |
| Categoria | Nome + cor |
| Valor | R$ formatado + cor (verde/vermelho) |
| Conta | Nome da conta |
| Status | Badge colorido |
| A√ß√µes | ‚öôÔ∏è Editar üóëÔ∏è Excluir |

### 4. P√°gina de Relat√≥rios e Metas

#### 4.1 Tela de Relat√≥rios
- **Layout:** P√°gina dedicada acess√≠vel pelo menu principal
- **Gr√°fico Principal:** Barras horizontais mostrando metas vs uso atual
- **Visualiza√ß√£o:** Cada barra representa uma meta ativa
- **Cores:** 
  - Verde: 0-50% usado
  - Amarelo: 51-80% usado  
  - Laranja: 81-99% usado
  - Vermelho: 100%+ usado (estourou)

#### 4.2 Gr√°fico de Barras - Metas
```
Alimenta√ß√£o    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë 80% (R$ 400/R$ 500)
Transporte     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë 60% (R$ 180/R$ 300) 
Lazer          ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë 30% (R$ 150/R$ 500)
Total Mensal   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë 70% (R$ 2.100/R$ 3.000)
```

#### 4.3 Gest√£o de Metas
- **Bot√£o:** "Nova Meta" no topo da p√°gina
- **Lista:** Abaixo do gr√°fico, cards compactos
- **A√ß√µes:** Editar, Pausar, Excluir por meta
- **Criar/Editar:** Modal ou p√°gina separada

### 5. Configura√ß√µes

#### 5.1 Gest√£o de Categorias
- **Listar:** Todas as categorias
- **Criar:** Nova categoria + cor + √≠cone
- **Editar:** Alterar nome/cor/√≠cone
- **Ativar/Desativar:** Soft delete

#### 5.2 Gest√£o de Contas
- **Listar:** Todas as contas
- **Criar:** Nova conta + tipo + banco
- **Editar:** Alterar nome/banco
- **Saldo Atual:** Calculado em tempo real

---

## üîÑ User Stories

### Epic 1: Gest√£o B√°sica de Transa√ß√µes

**US001 - Adicionar Receita**
> Como usu√°rio, quero registrar uma receita para controlar minha entrada financeira

**Crit√©rios de Aceite:**
- Posso escolher data, descri√ß√£o, valor e conta
- Posso categorizar a receita (opcional)
- Posso anexar comprovante (opcional)
- Transa√ß√£o fica como "paga" por padr√£o
- Saldo da conta √© atualizado automaticamente

**US002 - Adicionar Despesa**
> Como usu√°rio, quero registrar uma despesa para controlar meus gastos

**Crit√©rios de Aceite:**
- Posso escolher data, descri√ß√£o, valor e conta
- Posso categorizar e subcategorizar (opcional)
- Posso definir forma de pagamento
- Posso marcar como pendente ou paga
- Saldo da conta √© atualizado se paga

**US003 - Transferir Entre Contas**
> Como usu√°rio, quero transferir dinheiro entre minhas contas para reorganizar meu dinheiro

**Crit√©rios de Aceite:**
- Seleciono conta origem e destino
- Informo valor e descri√ß√£o
- Patrim√¥nio total n√£o se altera
- Saldos das contas s√£o atualizados
- Transa√ß√£o aparece como "transfer√™ncia"

### Epic 2: Parcelamento e Recorr√™ncia

**US004 - Compra Parcelada**
> Como usu√°rio, quero registrar uma compra parcelada para controlar presta√ß√µes

**Crit√©rios de Aceite:**
- Informo valor total e n√∫mero de parcelas
- Sistema cria automaticamente todas as parcelas
- Cada parcela tem data de vencimento
- Parcelas ficam agrupadas visualmente
- Posso marcar parcelas individuais como pagas

**US005 - Transa√ß√£o Recorrente**
> Como usu√°rio, quero automatizar transa√ß√µes que se repetem mensalmente

**Crit√©rios de Aceite:**
- Marco transa√ß√£o como recorrente
- Escolho frequ√™ncia (di√°rio/semanal/mensal/anual)
- Sistema gera pr√≥xima transa√ß√£o automaticamente
- Novas transa√ß√µes nascem como "pendente"
- Posso parar a recorr√™ncia a qualquer momento

### Epic 3: Metas e Controle

**US006 - Criar Meta de Gastos**
> Como usu√°rio, quero definir limites de gastos para controlar meu or√ßamento

**Crit√©rios de Aceite:**
- Defino valor limite e per√≠odo
- Posso associar a uma categoria espec√≠fica
- Sistema calcula progresso automaticamente
- Recebo alertas visuais quando pr√≥ximo do limite
- Posso ver hist√≥rico de metas passadas

**US007 - Dashboard Financeiro**
> Como usu√°rio, quero ver resumo da minha situa√ß√£o financeira na tela inicial

**Crit√©rios de Aceite:**
- Vejo saldo total de todas as contas
- Vejo receitas e despesas do m√™s atual
- Vejo gr√°fico de gastos por categoria
- Vejo √∫ltimas transa√ß√µes
- Vejo progresso das metas ativas

### Epic 4: Organiza√ß√£o e Relat√≥rios

**US008 - Filtrar Transa√ß√µes**
> Como usu√°rio, quero filtrar transa√ß√µes para encontrar informa√ß√µes espec√≠ficas

**Crit√©rios de Aceite:**
- Filtro por per√≠odo (data in√≠cio/fim)
- Filtro por categoria/subcategoria
- Filtro por conta
- Filtro por status (pago/pendente)
- Filtro por tipo (receita/despesa/transfer√™ncia)
- Posso combinar m√∫ltiplos filtros

**US009 - Buscar Transa√ß√µes**
> Como usu√°rio, quero buscar transa√ß√µes por descri√ß√£o para encontrar rapidamente

**Crit√©rios de Aceite:**
- Campo de busca na lista de transa√ß√µes
- Busca por descri√ß√£o (texto livre)
- Resultados em tempo real
- Destaque do termo buscado
- Busca n√£o diferencia mai√∫scula/min√∫scula

---

## üé® Wireframes e Fluxos

### 1. Fluxo Principal de Uso

```
1. Usu√°rio acessa app
2. Ve dashboard com resumo
3. Clica "Nova Transa√ß√£o"
4. Escolhe tipo (Receita/Despesa/Parcelada/Transfer√™ncia)
5. Preenche formul√°rio espec√≠fico
6. Salva transa√ß√£o
7. Volta para dashboard atualizado
```

### 2. Fluxo de Parcelamento

```
1. Usu√°rio clica "Nova Transa√ß√£o" ‚Üí "Parcelada"
2. Preenche: Descri√ß√£o, Valor Total, Parcelas
3. Sistema calcula valor por parcela
4. Usu√°rio confirma
5. Sistema cria N transa√ß√µes (1 para cada parcela)
6. Todas ficam com status "pendente"
7. Usu√°rio vai marcando como "paga" conforme paga
```

### 3. Fluxo de Recorr√™ncia

```
1. Usu√°rio cria transa√ß√£o normal
2. Marca checkbox "Recorrente"
3. Escolhe frequ√™ncia
4. Sistema agenda pr√≥xima recorr√™ncia
5. Na data programada, sistema cria nova transa√ß√£o "pendente"
6. Usu√°rio √© notificado e pode marcar como "paga"
7. Processo se repete automaticamente
```

---

## üèÜ Crit√©rios de Sucesso

### Objetivos Quantitativos
- **Performance:** Carregamento < 2 segundos
- **Usabilidade:** Cadastro de transa√ß√£o em < 30 segundos
- **Disponibilidade:** 99% uptime
- **Responsividade:** Funcional em mobile/desktop

### Objetivos Qualitativos
- Interface intuitiva e limpa
- Dados sempre √≠ntegros e consistentes
- Experi√™ncia fluida sem bugs cr√≠ticos
- Categoriza√ß√£o facilitada e l√≥gica

---

## üöß Limita√ß√µes e Restri√ß√µes

### Limita√ß√µes T√©cnicas
- **Usu√°rio √∫nico:** Sem autentica√ß√£o multi-user
- **Moeda √∫nica:** Apenas Real brasileiro (R$)
- **Sem integra√ß√£o banc√°ria:** Cadastro manual apenas
- **Sem notifica√ß√µes:** Alertas apenas visuais

### Limita√ß√µes de Escopo (Fora do MVP)
- Import/Export de dados
- Relat√≥rios avan√ßados em PDF
- Gr√°ficos complexos e comparativos
- Categoriza√ß√£o autom√°tica por IA
- Sincroniza√ß√£o com bancos
- Notifica√ß√µes push
- Multi-usu√°rio/compartilhamento

---

## üìÖ Roadmap de Desenvolvimento

### Fase 1: Funda√ß√£o (Semana 1-2)
- ‚úÖ Schema do banco
- ‚úÖ PRD detalhado
- üî≤ Setup do projeto Next.js
- üî≤ Configura√ß√£o Supabase
- üî≤ Estrutura de pastas e tipos

### Fase 2: CRUD B√°sico (Semana 3-4)
- üî≤ Tela de dashboard simples
- üî≤ Cadastro de transa√ß√µes b√°sicas
- üî≤ Lista de transa√ß√µes
- üî≤ Edi√ß√£o/exclus√£o
- üî≤ C√°lculo de saldos

### Fase 3: Funcionalidades Avan√ßadas (Semana 5-6)
- üî≤ Sistema de parcelamento
- üî≤ Transfer√™ncias entre contas
- üî≤ Upload de anexos
- üî≤ Filtros e busca

### Fase 4: Metas e Recorr√™ncia (Semana 7-8)
- üî≤ Sistema de metas
- üî≤ Transa√ß√µes recorrentes
- üî≤ Dashboard com gr√°ficos
- üî≤ Alertas visuais

### Fase 5: Polimento (Semana 9-10)
- üî≤ Testes e corre√ß√µes
- üî≤ Performance otimizada
- üî≤ UI/UX refinado
- üî≤ Deploy produ√ß√£o

---

## üìñ Documenta√ß√£o Adicional

### Pr√≥ximos Documentos Necess√°rios
1. **Estrutura do Projeto** - Arquitetura de pastas Next.js
2. **API Documentation** - Endpoints e tipos TypeScript
3. **UI/UX Guide** - Componentes e padr√µes visuais
4. **README T√©cnico** - Setup e instru√ß√µes desenvolvimento

### Refer√™ncias T√©cnicas
- [Supabase Documentation](https://supabase.com/docs)
- [Next.js Documentation](https://nextjs.org/docs)
- [shadcn/ui Components](https://ui.shadcn.com/)
- [Tailwind CSS](https://tailwindcss.com/docs)

---

**Documento criado em:** Agosto 2025  
**Vers√£o:** 1.0  
**Status:** ‚úÖ Aprovado para desenvolvimento